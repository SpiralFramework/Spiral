apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: 'org.openjfx.javafxplugin'

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

mainClassName = "info.spiralframework.gui.jvm.CockpitKt"

kotlin {
    jvm {
        compilations.main.kotlinOptions {
            jvmTarget = "11"
        }
    }
//    js {
//        browser {
//        }
//        nodejs {
//        }
//    }
//    // For ARM, should be changed to iosArm32 or iosArm64
//    // For Linux, should be changed to e.g. linuxX64
//    // For MacOS, should be changed to e.g. macosX64
//    // For Windows, should be changed to e.g. mingwX64
//    mingwX64("mingw") {
//    }
    sourceSets {
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5-1.4-M1'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.3.5-1.4-M1'
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0-1.4-M1"

                api project(":antlr-pipeline")
                api project(":bst")
                api project(":core")

                api 'org.abimon:kornea-img:1.3.5'

                implementation "ch.qos.logback:logback-classic:$logback_version"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }

        all {
            languageSettings {
                enableLanguageFeature("InlineClasses")
                useExperimentalAnnotation('kotlin.ExperimentalUnsignedTypes')
                useExperimentalAnnotation('kotlin.ExperimentalStdlibApi')
                useExperimentalAnnotation('kotlin.contracts.ExperimentalContracts')
            }
        }
//        jsMain {
//            dependencies {
//                implementation kotlin('stdlib-js')
//                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.3.0-RC'
//            }
//        }
//        jsTest {
//            dependencies {
//                implementation kotlin('test-js')
//            }
//        }
//        mingwMain {
//        }
//        mingwTest {
//        }
    }
}

javafx {
    version = '11'
    modules = [ 'javafx.controls', 'javafx.graphics' ]
    configuration = 'jvmImplementation'
}

shadowJar {
    baseName = jar.baseName
    appendix = jar.appendix
    version = jar.version

    classifier = "shadow"
}

jvmJar {
    archiveBaseName.set("spiral-$project.name")
    archiveVersion.set(project_version)
}

task jvmShadowJar(type: ShadowJar, dependsOn: [jvmJar]) {
    mergeServiceFiles()
    from jvmJar.archiveFile
    configurations = [project.configurations.jvmRuntimeClasspath]
    manifest {
        attributes 'Main-Class': mainClassName
    }

    group = "shadow"

    archiveBaseName.set(jvmJar.archiveBaseName.get())
    archiveAppendix.set(jvmJar.archiveAppendix.getOrNull())
    archiveVersion.set(jvmJar.archiveVersion.get())
    archiveClassifier.set("shadow")
}

//publishing {
//    publications {
//        maven(MavenPublication) {
//            artifact shadowJar
//        }
//    }
//}