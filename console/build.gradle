apply plugin: 'antlr'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"

mainClassName = "info.spiralframework.console.jvm.Cockpit"

dependencies {
//    implementation project(":spiral-antlr-pipeline")
    implementation project(":spiral-base")
    implementation project(":spiral-bst")
    implementation project(":spiral-formats")
    implementation project(":spiral-osl")
    implementation project(":spiral-core")
    implementation project(":spiral-updater")

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.3.9'
    implementation "ch.qos.logback:logback-classic:$logback_version"

    implementation "dev.brella:knolus-core:2.6.3"

    antlr "org.antlr:antlr4:4.7.2"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        languageVersion = "1.4"

        freeCompilerArgs = ["-Xopt-in=kotlin.RequiresOptIn"]

    }
}

jar {
    archiveBaseName.set("spiral-$project.name")
    archiveVersion.set(project_version)
}

shadowJar {
    mergeServiceFiles()
    from jar.archiveFile
    configurations = [project.configurations.runtimeClasspath]
    manifest {
        attributes 'Main-Class': mainClassName
    }

    group = "shadow"

    archiveBaseName.set(jar.archiveBaseName.get())
    archiveAppendix.set(jar.archiveAppendix.getOrNull())
    archiveVersion.set(jar.archiveVersion.get())
    archiveClassifier.set("shadow")
}


//publishing {
//    publications {
//        maven(MavenPublication) {
//            artifact shadowJar
//        }
//    }
//}

//downloadLicenses {
//    includeProjectDependencies = true
//    dependencyConfiguration = 'runtimeClasspath'
//}

task downloadKnolus(type: de.undercouch.gradle.tasks.download.Download) {
    group = "knolus"

    src(["https://raw.githubusercontent.com/UnderMybrella/Knolus/master/core/src/main/antlr/KnolusLexer.g4",
         "https://raw.githubusercontent.com/UnderMybrella/Knolus/master/core/src/main/antlr/KnolusModesLexer.g4",
         "https://raw.githubusercontent.com/UnderMybrella/Knolus/master/core/src/main/antlr/KnolusParser.g4",
         "https://raw.githubusercontent.com/UnderMybrella/Knolus/master/core/src/main/antlr/LibLexer.g4"]
    )
    dest(file("$projectDir/src/main/antlr/"))
}

generateGrammarSource {
    group = "knolus"
    dependsOn("downloadKnolus")

    arguments += ['-visitor', '-package', 'info.spiralframework.antlr.pipeline']
    outputDirectory = file("$buildDir/generated-src/antlr/main/info/spiralframework/antlr/pipeline")
}

compileKotlin {
    dependsOn("generateGrammarSource")
}