apply plugin: 'org.jetbrains.kotlin.multiplatform'

kotlin {
    jvm {
        compilations.main.kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
        }
    }
    js()
//    js {
//        browser {
//        }
//        nodejs {
//        }
//    }
//    // For ARM, should be changed to iosArm32 or iosArm64
//    // For Linux, should be changed to e.g. linuxX64
//    // For MacOS, should be changed to e.g. macosX64
//    // For Windows, should be changed to e.g. mingwX64
//    mingwX64("mingw") {
//    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

                api "dev.brella:kornea-annotations:$kornea_annotations_version"
                api "dev.brella:kornea-errors:$kornea_errors_version"
                api "dev.brella:kornea-io:$kornea_io_version"
                api "dev.brella:kornea-toolkit:$kornea_toolkit_version"
            }
        }
        jvmMain {
            dependencies {
                api "org.slf4j:slf4j-api:$sfl4j_version"
                api "io.github.soc:directories:11"
            }
        }

        all {
            languageSettings {
                enableLanguageFeature("InlineClasses")
                useExperimentalAnnotation('kotlin.ExperimentalUnsignedTypes')
                useExperimentalAnnotation('kotlin.ExperimentalStdlibApi')
                useExperimentalAnnotation('kotlin.contracts.ExperimentalContracts')
            }
        }

//        jsTest {
//            dependencies {
//                implementation kotlin('test-js')
//            }
//        }
//        mingwMain {
//        }
//        mingwTest {
//        }
    }
}

downloadLicenses {
    includeProjectDependencies = true
    dependencyConfiguration = 'jvmRuntimeClasspath'
}