apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

kotlin {
    jvm {
        compilations.main.kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"

                api project(":spiral-base")
                api project(":spiral-formats")
                api project(":spiral-osl")

                api "dev.brella:kornea-img:$kornea_img_version"
            }
        }
        jvmMain {
            dependencies {
//                api "com.fasterxml.jackson.core:jackson-core:$jackson_version"
//                api "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
//                api "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
//                api "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jackson_version"
//                api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
//                api "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
//                api "com.fasterxml.jackson.module:jackson-module-parameter-names:$jackson_version"
//                api "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
//                api "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jackson_version"

//                api "com.github.kittinunf.fuel:fuel:$fuel_version"
//                api "com.github.kittinunf.fuel:fuel-coroutines:$fuel_version"

                api "io.ktor:ktor-client-apache:$ktor_version"

                api "com.twelvemonkeys.imageio:imageio-bmp:3.4.1"
                api "com.twelvemonkeys.imageio:imageio-jpeg:3.4.1"
                api "com.twelvemonkeys.imageio:imageio-tga:3.4.1"

//                api "org.greenrobot:eventbus:3.1.1"
            }
        }

        all {
            languageSettings {
                enableLanguageFeature("InlineClasses")
                useExperimentalAnnotation('kotlin.ExperimentalUnsignedTypes')
                useExperimentalAnnotation('kotlin.ExperimentalStdlibApi')
                useExperimentalAnnotation('kotlin.contracts.ExperimentalContracts')
            }
        }
    }
}

//downloadLicenses {
//    includeProjectDependencies = true
//    dependencyConfiguration = 'jvmRuntimeClasspath'
//}